{{{ x-header }}}

{{#with model}}
namespace {{ @root.host.namespace }}
{
	using System.ComponentModel;
	using System.Runtime.CompilerServices;

	public abstract class BindableObject : INotifyPropertyChanged
	{
		public event PropertyChangedEventHandler PropertyChanged;
	
		protected virtual void OnPropertyChanged([CallerMemberName] string propertyName = null)
		{
			PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
		}

		public void RefreshProperties()
		{
			OnPropertyChanged(null);
		}
	}
}
{{/with}}