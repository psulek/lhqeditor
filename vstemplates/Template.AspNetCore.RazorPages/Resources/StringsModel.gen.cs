//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool - Localization HQ Editor.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Template.AspNetCore.RazorPages
{
	using System;
	using System.Resources;
	using System.Reflection;
	using System.Collections.Generic;
	using System.Globalization;
	using Microsoft.Extensions.Localization;

    public class StringsModelLocalizer : IStringLocalizer
    {
        private readonly CultureInfo _culture;
		private static readonly Lazy<ResourceManager> _resourceManager = new Lazy<ResourceManager>(CreateResourceManager);

        public StringsModelLocalizer()
        {}

        public StringsModelLocalizer(CultureInfo culture)
        {
            _culture = culture;
        }

		public static ResourceManager ResourceManager
		{
		    get
			{
			    return _resourceManager.Value;
			}
		}

		private static ResourceManager CreateResourceManager()
		{
		    return new ResourceManager("Template.AspNetCore.RazorPages.Resources.StringsModel",
				    typeof(Template.AspNetCore.RazorPages.StringsModel).GetTypeInfo().Assembly);
		}

        LocalizedString IStringLocalizer.this[string name]
        {
            get
            {
                if (name == null)
                {
                    throw new ArgumentNullException(nameof(name));
                }

                var value = GetStringSafely(name, _culture);
                return new LocalizedString(name, value ?? name, value == null);
            }
        }

        LocalizedString IStringLocalizer.this[string name, params object[] arguments]
        {
            get
            {
                if (name == null)
                {
                    throw new ArgumentNullException(nameof(name));
                }

                var format = GetStringSafely(name, _culture);
                var value = string.Format(format ?? name, arguments);
                return new LocalizedString(name, value, format == null);
            }
        }

        public IEnumerable<LocalizedString> GetAllStrings(bool includeParentCultures)
        {
            throw new NotImplementedException();
        }

        public IStringLocalizer WithCulture(CultureInfo culture)
        {
            return new StringsModelLocalizer(culture);
        }

        /// <summary>
        /// Gets a resource string from the resources and returns <c>???name.{culture}???</c> instead of
        /// throwing exceptions if a match isn't found.
        /// </summary>
        /// <param name="name">The name of the string resource.</param>
        /// <param name="culture">The <see cref="CultureInfo"/> to get the string for.</param>
        /// <returns>The resource string, or <c>???name.{culture}???</c> if none was found.</returns>
        protected string GetStringSafely(string name, CultureInfo culture)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }

            try
            {
                return culture == null ? ResourceManager.GetString(name) : ResourceManager.GetString(name, culture);
            }
            catch (MissingManifestResourceException)
            {
                return $"???{name}.{culture?.Name}???";
            }
        }
    }

	public static class StringsModelKeys
	{
		public static class Form
		{
			/// <summary>
			/// Gets localized string similar to: Name
			/// </summary>
			public const string Name = "FormName";
			/// <summary>
			/// Gets localized string similar to: Surname
			/// </summary>
			public const string Surname = "FormSurname";
			/// <summary>
			/// Gets localized string similar to: User name
			/// </summary>
			public const string Username = "FormUsername";
		}
		
		public static class Languages
		{
			/// <summary>
			/// Gets localized string similar to: English Language
			/// </summary>
			public const string en = "Languagesen";
			/// <summary>
			/// Gets localized string similar to: Slovak Language
			/// </summary>
			public const string sk = "Languagessk";
		}
		
		public static class Messages
		{
			/// <summary>
			/// Gets localized string similar to: Please enter information about you:
			/// </summary>
			public const string PleaseEnterInfo = "MessagesPleaseEnterInfo";
			/// <summary>
			/// Gets localized string similar to: Welcome {0} {1} ({2}) !
			/// </summary>
			public const string WelcomeMessage = "MessagesWelcomeMessage";
			/// <summary>
			/// Gets localized string similar to: We're glad you are using "Localization HQ Editor"
			/// </summary>
			public const string WelcomeSubmessage = "MessagesWelcomeSubmessage";
		}
		
		public static class ValidationErrors
		{
			/// <summary>
			/// Gets localized string similar to: Field value is required.
			/// </summary>
			public const string FieldIsRequired = "ValidationErrorsFieldIsRequired";
			/// <summary>
			/// Gets localized string similar to: Only alphanumeric characters without space and accent are allowed for field '{0}...
			/// </summary>
			public const string OnlyAlphanumericAllowed = "ValidationErrorsOnlyAlphanumericAllowed";
		}
	}

	public partial class StringsModel
	{
		private static IStringLocalizer _localizer;

		public StringsModel(IStringLocalizer localizer)
		{
			_localizer = localizer;
		}

		public static string[] AvailableCultures
		{
		    get
			{
                return new string[] { "en","sk" };
			}
		}

		public static partial class Form
		{
			/// <summary>
			/// Gets localized string similar to: Name
			/// </summary>
			public static string Name
			{
			    get
				{
				    return _localizer[StringsModelKeys.Form.Name];
				}
			}

			/// <summary>
			/// Gets localized string similar to: Surname
			/// </summary>
			public static string Surname
			{
			    get
				{
				    return _localizer[StringsModelKeys.Form.Surname];
				}
			}

			/// <summary>
			/// Gets localized string similar to: User name
			/// </summary>
			public static string Username
			{
			    get
				{
				    return _localizer[StringsModelKeys.Form.Username];
				}
			}

		}
		
		public static partial class Languages
		{
			/// <summary>
			/// Gets localized string similar to: English Language
			/// </summary>
			public static string en
			{
			    get
				{
				    return _localizer[StringsModelKeys.Languages.en];
				}
			}

			/// <summary>
			/// Gets localized string similar to: Slovak Language
			/// </summary>
			public static string sk
			{
			    get
				{
				    return _localizer[StringsModelKeys.Languages.sk];
				}
			}

		}
		
		public static partial class Messages
		{
			/// <summary>
			/// Gets localized string similar to: Please enter information about you:
			/// </summary>
			public static string PleaseEnterInfo
			{
			    get
				{
				    return _localizer[StringsModelKeys.Messages.PleaseEnterInfo];
				}
			}

			/// <summary>
			/// Gets localized string similar to: Welcome {0} {1} ({2}) !
			/// </summary>
			public static string WelcomeMessage(object name,object surname,object username)
			{
			    return _localizer[StringsModelKeys.Messages.WelcomeMessage, name,surname,username];
			}

			/// <summary>
			/// Gets localized string similar to: We're glad you are using "Localization HQ Editor"
			/// </summary>
			public static string WelcomeSubmessage
			{
			    get
				{
				    return _localizer[StringsModelKeys.Messages.WelcomeSubmessage];
				}
			}

		}
		
		public static partial class ValidationErrors
		{
			/// <summary>
			/// Gets localized string similar to: Field value is required.
			/// </summary>
			public static string FieldIsRequired
			{
			    get
				{
				    return _localizer[StringsModelKeys.ValidationErrors.FieldIsRequired];
				}
			}

			/// <summary>
			/// Gets localized string similar to: Only alphanumeric characters without space and accent are allowed for field '{0}...
			/// </summary>
			public static string OnlyAlphanumericAllowed(object fieldName)
			{
			    return _localizer[StringsModelKeys.ValidationErrors.OnlyAlphanumericAllowed, fieldName];
			}

		}
	}
}
